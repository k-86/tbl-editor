{"version":3,"sources":["state/ducks/viewstyles/actions.ts","state/ducks/viewstyles/reducers.ts","state/ducks/viewstyles/operations.ts","state/ducks/viewstyles/selectors.ts","state/ducks/viewstyles/index.ts","constants.ts","views/components/AppGridStyle.tsx","views/containers/AppGridStyle.ts","views/components/EditorStyle.tsx","views/containers/EditorStyle.ts","views/components/ViewerStyle.tsx","views/containers/ViewerStyle.ts","state/ducks/repositories/actions.ts","state/ducks/repositories/utils.ts","state/ducks/repositories/reducers.ts","state/ducks/repositories/selectors.ts","state/ducks/editors/actions.ts","state/ducks/editors/reducers.ts","state/ducks/editors/operations.ts","state/ducks/editors/selectors.ts","state/ducks/editors/index.ts","state/ducks/timetables/actions.ts","state/ducks/timetables/reducers.ts","state/ducks/timetables/operations.ts","state/ducks/timetables/selectors.ts","state/ducks/timetables/index.ts","state/ducks/repositories/operations.ts","state/ducks/repositories/index.ts","views/components/HistorySetting.tsx","views/containers/HistorySetting.ts","views/components/SettingMenu.tsx","views/components/TimeTableSelector.tsx","views/containers/TimeTableSelector.ts","views/components/ProgressButton.tsx","views/components/CreateFileButton.tsx","views/containers/CreateFileButton.ts","views/components/AppTitleBar.tsx","views/containers/AppTitleBar.ts","views/containers/containerUtils.ts","views/components/componentUtils.ts","views/components/TextEditor.tsx","views/containers/TextEditor.ts","views/components/Editor.tsx","views/components/TimeTableDescriptions.tsx","views/containers/TimeTableDescriptions.ts","views/components/TimeTableView.tsx","views/containers/TimeTableView.ts","views/components/DeleteDialog.tsx","views/containers/DeleteDialog.ts","views/components/ReadDialog.tsx","views/containers/ReadDialog.ts","views/components/HistoryDialog.tsx","views/containers/HistoryDialog.ts","views/components/RenameDialog.tsx","views/containers/RenameDialog.ts","views/components/TimeTableSearch.tsx","views/containers/TimeTableSearch.ts","views/components/Repositories.tsx","views/containers/Repositories.ts","views/components/Viewer.tsx","views/containers/Viewer.ts","views/components/App.tsx","views/containers/App.ts","serviceWorker.ts","state/store.ts","index.tsx"],"names":["actionCreator","actionCreatorFactory","setViewerHeight","setTextEditorRow","setAppGridRow","reducer","reducerWithInitialState","viewerHeight","textEditorRow","appGridRow","case","actions","state","payload","produce","draft","height","row","size","build","dispatch","numberToGridSize","from","gridL","gridR","AppSetting","min","max","step","EditorSetting","ViewerSetting","HistorySetting","AppGridStyle","React","useState","inputData","setInputData","debounceChangeInput","useCallback","debounce","e","TextField","id","label","helperText","margin","variant","type","required","fullWidth","inputProps","value","onChange","data","Number","target","Math","connect","viewstyles","operations","Component","EditorStyle","InputProps","endAdornment","InputAdornment","position","ViewerStyle","create","remove","updateSearchFileName","updateCheckFileName","setHistorySize","generateId","uuidV4","generateTBLData","name","generateTimestamp","Date","now","byId","byName","initialState","searchFileName","checkFileName","tbls","created","historySize","push","tbl","newTbls","filter","fileName","asc","newTBLs","sort","a","b","reduce","unique","find","includes","includeName","undefined","setEditTBL","updateEditData","initSelectedTBL","selectedTBL","editData","editors","selectTimeTable","selectDayOfWeek","dayOfWeek","getDayOfWeeks","input","match","dayOfWeekDict","MON","TUE","WED","THU","FRI","SAT","SUN","HOL","NOT_FOUND","convertDayOfWeek","dayOfWeekStr","list","slice","split","map","sum","str","getTTMinutes","res","trim","minute","descriptions","forEach","minuteStr","descsStr","test","t","descriptionStr","length","kv","key","values","v","replace","title","hours","datas","getTitles","hour","minutes","timeTableStrList","newTBL","editorOperations","ttOperations","selectors","repositories","filteredByName","deleteSize","resize","oldName","newName","deleteOrigin","sortedByCreated","initCreated","i","index","findIndex","Setting","SettingMenu","open","setOpen","handleClose","IconButton","onClick","Settings","fontSize","Dialog","maxWidth","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","Grid","container","direction","justify","alignItems","spacing","item","xs","DialogActions","Button","color","useStyles","makeStyles","theme","createStyles","formControl","marginTop","marginBottom","minWidth","TimeTableSelector","dayOfWeeks","classes","handleSelectTimeTable","autoComplete","FormControl","className","InputLabel","htmlFor","Select","MenuItem","selected","timetables","root","display","wrapper","progress","top","left","marginLeft","ProgressButton","props","isChanging","btnProps","disabled","CircularProgress","fab","CreateFileButton","isCreateFileNameEmpty","isAlreadyToUseCreateFile","changing","setChanging","useEffect","Fab","aria-label","Add","onSubmit","preventDefault","placeholder","autoFocus","error","flexGrow","content","AppTitleBar","editFileName","AppBar","Toolbar","Typography","component","createEditContents","createTitle","getColorCode","description","formatDigit","convertTimeStamp","utc","d","year","getFullYear","month","getMonth","day","getDate","getDay","getHours","getMinutes","second","getSeconds","date","time","TextEditor","disableEdit","isEditDataChanged","inputRow","save","changeInput","Box","noValidate","multiline","rows","startIcon","Save","SaveAlt","unicodeArray","Encoding","stringToCode","sjisArray","convert","uint8Array","Uint8Array","blob","Blob","FileSaver","saveAs","handleExportTBL","utils","stateProps","dispatchProps","otherState","repoOperations","paper","padding","Editor","Paper","square","TimeTableDescriptions","descriptionDict","Table","TableHead","TableRow","TableCell","scope","TableBody","Object","entries","Fragment","noWrap","style","oddCell","backgroundColor","evenCell","createDescriptionMessage","ttm","Array","convertDescriptions","descs","TimeTableView","align","idx","rowSpan","timeTableStr","DeleteDialog","ownProps","button","textTransform","ReadDialog","saveName","read","handleCancel","handleDoNotSave","eSelectors","readId","overflow","TBL","openReadDialog","setOpenReadDialog","ListItem","ListItemIcon","OpenInNew","ListItemText","primary","secondary","HistoryDialog","editId","List","dense","_","RenameDialog","rename","leaveOriginalFile","setLeaveOriginalFile","FormControlLabel","control","Checkbox","checked","event","TimeTableSearch","searchFile","search","editMenuAnchorEl","setEditMenuAnchorEl","handleCloseEditMenu","initDialog","history","delete","openDialog","setOpenDialog","handleCloseDialog","ListItemSecondaryAction","aria-controls","aria-haspopup","currentTarget","MoreVert","Menu","anchorEl","keepMounted","Boolean","History","Edit","Delete","Repositories","searchName","sortedInDescCreated","removedDuplicateName","tabContent","maxHeight","createTabLabel","Tab","createTabContent","children","role","hidden","Viewer","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","App","md","window","location","hostname","rootPersistConfig","version","storage","blacklist","editorsPersistConfig","whitelist","repositoriesPersistConfig","viewStylesPersistConfig","rootReducer","combineReducers","persistReducer","persistedReducer","reduxStore","createStore","persistor","persistStore","ReactDOM","render","store","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.917a0657.chunk.js","sourcesContent":["import actionCreatorFactory from \"typescript-fsa\";\n\nconst actionCreator = actionCreatorFactory(\"VIEW_STYLE\");\n\nexport const setViewerHeight = actionCreator<{\n  height: number;\n}>(\"SET_VIEWER_HEIGHT\");\n\nexport const setTextEditorRow = actionCreator<{\n  row: number;\n}>(\"SET_TEXT_EDITOR_ROW\");\n\nexport const setAppGridRow = actionCreator<{\n  size: number;\n}>(\"SET_APP_GRID_ROW\");\n\nexport default {\n  setViewerHeight,\n  setTextEditorRow,\n  setAppGridRow\n};\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport produce from \"immer\";\nimport actions from \"./actions\";\nimport { ViewStyleState as State } from \"./types\";\n\nconst initialState: State = {\n  viewerHeight: 300,\n  textEditorRow: 15,\n  appGridRow: 5\n};\n\n/* eslint-disable no-param-reassign */\nconst reducer = reducerWithInitialState<State>(initialState)\n  .case(actions.setViewerHeight, (state, payload) =>\n    produce(state, draft => {\n      draft.viewerHeight = payload.height;\n    })\n  )\n  .case(actions.setTextEditorRow, (state, payload) =>\n    produce(state, draft => {\n      draft.textEditorRow = payload.row;\n    })\n  )\n  .case(actions.setAppGridRow, (state, payload) =>\n    produce(state, draft => {\n      draft.appGridRow = payload.size;\n    })\n  )\n  .build();\n\nexport default reducer;\n","import { Dispatch } from \"redux\";\nimport actions from \"./actions\";\n\nconst setViewerHeight = (dispatch: Dispatch) => {\n  return (height: number): void => {\n    dispatch(actions.setViewerHeight({ height }));\n  };\n};\n\nconst setTextEditorRow = (dispatch: Dispatch) => {\n  return (row: number): void => {\n    dispatch(actions.setTextEditorRow({ row }));\n  };\n};\n\nconst setAppGridRow = (dispatch: Dispatch) => {\n  return (size: number): void => {\n    dispatch(actions.setAppGridRow({ size }));\n  };\n};\n\nexport default {\n  setViewerHeight,\n  setTextEditorRow,\n  setAppGridRow\n};\n","import { GridSize, ViewStyleState } from \"./types\";\n\nexport const numberToGridSize = (from: number): GridSize => {\n  if (from < 0) {\n    return 1;\n  }\n\n  if (from === 0 || from > 12) {\n    return 12;\n  }\n\n  return from as GridSize;\n};\n\nexport const getGridSize = (\n  state: ViewStyleState\n): { gridL: GridSize; gridR: GridSize } => ({\n  gridL: numberToGridSize(state.appGridRow),\n  gridR: numberToGridSize(12 - state.appGridRow)\n});\n\nexport default {\n  getGridSize\n};\n","import reducer from \"./reducers\";\n\nexport { default as operations } from \"./operations\";\nexport { default as selectors } from \"./selectors\";\nexport { default as types } from \"./types\";\n\nexport default reducer;\n","export const AppSetting = {\n  appGridRow: {\n    min: 1,\n    max: 12,\n    step: 1\n  }\n};\n\nexport const EditorSetting = {\n  textEditorRow: {\n    min: 1,\n    step: 1\n  }\n};\n\nexport const ViewerSetting = {\n  viewerHeight: {\n    min: 0,\n    step: 10\n  }\n};\n\nexport const HistorySetting = {\n  historySize: {\n    min: 1,\n    max: 100\n  }\n};\n","import React, { ReactElement } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { TextField } from \"@material-ui/core\";\nimport { AppSetting } from \"../../constants\";\n\nexport type StateProps = {\n  appGridRow: number;\n};\n\nexport type DispatchProps = {\n  setAppGridRow: (size: number) => void;\n};\n\nconst AppGridStyle: React.FC<StateProps & DispatchProps> = ({\n  appGridRow,\n  setAppGridRow\n}): ReactElement => {\n  const { min, max, step } = AppSetting.appGridRow;\n  const [inputData, setInputData] = React.useState(appGridRow);\n\n  const debounceChangeInput = React.useCallback(\n    debounce((e: number): void => {\n      setAppGridRow(e);\n    }, 500),\n    []\n  );\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const data = Number(e.target.value);\n    const size = Math.min(Math.max(data, min), max);\n\n    setInputData(size);\n    debounceChangeInput(size);\n  };\n\n  return (\n    <TextField\n      id=\"app-grid-size\"\n      label=\"左右のGrid Size\"\n      helperText={`Size:${min}~${max}`}\n      margin=\"dense\"\n      variant=\"outlined\"\n      type=\"number\"\n      required\n      fullWidth\n      inputProps={{\n        min,\n        max,\n        step\n      }}\n      value={inputData}\n      onChange={handleChangeInput}\n    />\n  );\n};\n\nexport default AppGridStyle;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations } from \"../../state/ducks/viewstyles\";\nimport Component, {\n  StateProps,\n  DispatchProps\n} from \"../components/AppGridStyle\";\n\nconst mapStateToProps = ({ viewstyles }: State): StateProps => ({\n  appGridRow: viewstyles.appGridRow\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  setAppGridRow: operations.setAppGridRow(dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { InputAdornment, TextField } from \"@material-ui/core\";\nimport { EditorSetting } from \"../../constants\";\n\nexport type StateProps = {\n  textEditorRow: number;\n};\n\nexport type DispatchProps = {\n  setTextEditorRow: (row: number) => void;\n};\n\nconst EditorStyle: React.FC<StateProps & DispatchProps> = ({\n  textEditorRow,\n  setTextEditorRow\n}): ReactElement => {\n  const { min, step } = EditorSetting.textEditorRow;\n  const [inputData, setInputData] = React.useState(textEditorRow);\n\n  const debounceChangeInput = React.useCallback(\n    debounce((e: number): void => {\n      setTextEditorRow(e);\n    }, 500),\n    []\n  );\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const data = Number(e.target.value);\n    const size = Math.max(data, min);\n\n    setInputData(size);\n    debounceChangeInput(size);\n  };\n\n  return (\n    <TextField\n      id=\"tbl-text-editor-input-row\"\n      label=\"入力欄の表示行数\"\n      margin=\"dense\"\n      variant=\"outlined\"\n      type=\"number\"\n      required\n      fullWidth\n      /* eslint-disable react/jsx-no-duplicate-props */\n      inputProps={{\n        min,\n        step\n      }}\n      InputProps={{\n        endAdornment: <InputAdornment position=\"end\">行</InputAdornment>\n      }}\n      /* eslint-enable react/jsx-no-duplicate-props */\n      value={inputData}\n      onChange={handleChangeInput}\n    />\n  );\n};\n\nexport default EditorStyle;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations } from \"../../state/ducks/viewstyles\";\nimport Component, {\n  StateProps,\n  DispatchProps\n} from \"../components/EditorStyle\";\n\nconst mapStateToProps = ({ viewstyles }: State): StateProps => ({\n  textEditorRow: viewstyles.textEditorRow\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  setTextEditorRow: operations.setTextEditorRow(dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { InputAdornment, TextField } from \"@material-ui/core\";\nimport { ViewerSetting } from \"../../constants\";\n\nexport type StateProps = {\n  viewerHeight: number;\n};\n\nexport type DispatchProps = {\n  setViewerHeight: (height: number) => void;\n};\n\nconst ViewerStyle: React.FC<StateProps & DispatchProps> = ({\n  viewerHeight,\n  setViewerHeight\n}): ReactElement => {\n  const { min, step } = ViewerSetting.viewerHeight;\n  const [inputData, setInputData] = React.useState(viewerHeight);\n\n  const debounceChangeInput = React.useCallback(\n    debounce((e: number): void => {\n      setViewerHeight(e);\n    }, 500),\n    []\n  );\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const data = Number(e.target.value);\n    const size = Math.max(data, min);\n\n    setInputData(size);\n    debounceChangeInput(size);\n  };\n\n  return (\n    <TextField\n      id=\"time-table-content-height\"\n      label=\"時刻表リスト・時刻表・備考データ\"\n      margin=\"dense\"\n      variant=\"outlined\"\n      type=\"number\"\n      required\n      fullWidth\n      /* eslint-disable react/jsx-no-duplicate-props */\n      inputProps={{\n        min,\n        step\n      }}\n      InputProps={{\n        endAdornment: <InputAdornment position=\"end\">px</InputAdornment>\n      }}\n      /* eslint-enable react/jsx-no-duplicate-props */\n      value={inputData}\n      onChange={handleChangeInput}\n    />\n  );\n};\n\nexport default ViewerStyle;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations } from \"../../state/ducks/viewstyles\";\nimport Component, {\n  StateProps,\n  DispatchProps\n} from \"../components/ViewerStyle\";\n\nconst mapStateToProps = ({ viewstyles }: State): StateProps => ({\n  viewerHeight: viewstyles.viewerHeight\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  setViewerHeight: operations.setViewerHeight(dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component);\n","import actionCreatorFactory from \"typescript-fsa\";\nimport { TBL } from \"./types\";\n\nconst actionCreator = actionCreatorFactory(\"REPOSITORIES\");\n\nexport const create = actionCreator<{\n  tbl: TBL;\n}>(\"CREATE\");\n\nexport const remove = actionCreator<{\n  id: string;\n}>(\"REMOVE\");\n\nexport const updateSearchFileName = actionCreator<{\n  fileName: string;\n}>(\"UPDATE_SEARCH_FILE_NAME\");\n\nexport const updateCheckFileName = actionCreator<{\n  fileName: string;\n}>(\"UPDATE_CHECK_FILE_NAME\");\n\nexport const setHistorySize = actionCreator<{\n  historySize: number;\n}>(\"SET_HISTORY_SIZE\");\n\nexport default {\n  create,\n  remove,\n  updateSearchFileName,\n  updateCheckFileName,\n  setHistorySize\n};\n","import uuidV4 from \"uuid/v4\";\nimport { TBL } from \"./types\";\n\nconst templateTBL = `\n;「;」から始まる行はコメント行です\n;「駅.Locky」「時刻表.Locky」に対応したTBLファイルの作成方法は\n;https://ekilocky.hatenablog.jp/entry/20091001/1254389719\n;をご覧ください\n;以下、TBLファイルの例\n\na:新木場;木\nb:大崎;崎\nc:快速;快\nd:通勤快速;通\ne:普通;普\n\n[MON][TUE][WED][THU][FRI]\n# 新宿 大崎方面(平日)\n7: ea10 ea22 da33 da44 ea50 ea57\n8: da00 ea08 ea10 da17 ea20 ea26 ea28 da31 ea38 da44 ea53 ea58\n9: ea09 da13 ea22 da28 ea42 ea54\n10: ea03 da26 ca50\n11: ca06 ca26 ca48\n12: ca07 ca25 ca50\n13: ca07 ca25 ca48\n14: ca06 ca25 ca48\n15: ca06 ca26 ca50\n16: ca05 ca25 ea38 ca48\n17: ea03 ca06 ea12 ca25 ea29 ea49 ea56\n18: ea06 ea14 ea25 ea38 ea44 ea55\n19: ea03 ea13 ea27 ea35 ea48\n20: da01 ea10 da22 ea40 ea50 da57\n21: ea11 ea23 ea33 ea45 ea56\n22: ea05 ea16 ea28 ea40 ea51\n23: ea03 da17 eb31\n\n[SAT][SUN][HOL]\n# 新宿 大崎方面(土休日)\n7: ea09 ea21 ea33 ca45 ea56\n8: ca08 ea18 ea33 ca47 ea55\n9: ca08 ea21 ca28 ea35 ca48\n10: ea03 ca27 ca50\n11: ca06 ca27 ca49\n12: ca07 ca26 ca50\n13: ca06 ca26 ca48\n14: ca06 ca26 ca48\n15: ca06 ca27 ca50\n16: ca06 ca25 ea36 ca48\n17: ca05 ea18 ca27 ea44 ea51 ea56\n18: ea15 ca26 ca45\n19: ea00 ea13 ca27 ca48\n20: ea00 ea20 ea38 ea55\n21: ea08 ea23 ea41 ea57\n22: ea10 ea22 ea46\n23: ea01 ea18 eb31\n`;\n\nexport const generateId = (): string => uuidV4();\n\nexport const generateTBLData = (name: string): string =>\n  `;ファイル名 : ${name}${templateTBL}`;\n\nexport const generateTimestamp = (): number => Date.now();\n\nexport const byId = (id: string) => (e: TBL): boolean => e.id === id;\nexport const byName = (name: string) => (e: TBL): boolean => e.name === name;\nexport const includeName = (name: string) => (e: TBL): boolean =>\n  e.name.includes(name);\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport produce from \"immer\";\nimport { RepositoryState as State } from \"./types\";\nimport actions from \"./actions\";\nimport { generateId, generateTBLData, generateTimestamp } from \"./utils\";\n\nconst initialState: State = {\n  searchFileName: \"\",\n  checkFileName: \"\",\n  tbls: [\n    {\n      id: generateId(),\n      name: \"新宿-大崎\",\n      data: generateTBLData(\"新宿-大崎\"),\n      created: generateTimestamp()\n    }\n  ],\n  historySize: 10\n};\n\n/* eslint-disable no-param-reassign */\nconst reducer = reducerWithInitialState<State>(initialState)\n  .case(actions.create, (state, payload) =>\n    produce(state, draft => {\n      draft.checkFileName = \"\";\n      draft.tbls.push({ ...payload.tbl });\n    })\n  )\n  .case(actions.remove, (state, payload) =>\n    produce(state, draft => {\n      const newTbls = draft.tbls.filter(e => e.id !== payload.id);\n      draft.tbls = newTbls;\n    })\n  )\n  .case(actions.updateSearchFileName, (state, payload) =>\n    produce(state, draft => {\n      draft.searchFileName = payload.fileName;\n    })\n  )\n  .case(actions.updateCheckFileName, (state, payload) =>\n    produce(state, draft => {\n      draft.checkFileName = payload.fileName;\n    })\n  )\n  .case(actions.setHistorySize, (state, payload) =>\n    produce(state, draft => {\n      draft.historySize = payload.historySize;\n    })\n  )\n  .build();\n\nexport default reducer;\n","import { RepositoryState, TBL } from \"./types\";\nimport { byName, includeName, byId } from \"./utils\";\n\nconst getTBLs = (state: RepositoryState): TBL[] => {\n  return [...state.tbls];\n};\n\nconst sortByCreated = (tbls: TBL[], asc: boolean): TBL[] => {\n  const newTBLs = [...tbls];\n\n  return asc\n    ? newTBLs.sort((a, b) => a.created - b.created)\n    : newTBLs.sort((a, b) => b.created - a.created);\n};\n\nconst removeDuplicateName = (tbls: TBL[]): TBL[] => {\n  return tbls.reduce(\n    (unique, tbl) =>\n      unique.find(e => e.name === tbl.name) ? unique : [...unique, tbl],\n    [] as TBL[]\n  );\n};\n\nconst filterByIncludeName = (tbls: TBL[], name: string): TBL[] => {\n  return tbls.filter(includeName(name));\n};\n\nconst filterByName = (tbls: TBL[], name: string): TBL[] => {\n  return tbls.filter(byName(name));\n};\n\nconst findById = (tbls: TBL[], id: string): TBL | undefined => {\n  return tbls.find(byId(id));\n};\n\nconst isCreateFileNameEmpty = (state: RepositoryState): boolean =>\n  state.checkFileName === \"\";\n\nconst isAlreadyToUseCreateFile = (state: RepositoryState): boolean => {\n  const { checkFileName, tbls } = state;\n\n  return tbls.find(byName(checkFileName)) !== undefined;\n};\n\nexport default {\n  getTBLs,\n  sortByCreated,\n  removeDuplicateName,\n  filterByIncludeName,\n  filterByName,\n  findById,\n  isCreateFileNameEmpty,\n  isAlreadyToUseCreateFile\n};\n","import actionCreatorFactory from \"typescript-fsa\";\nimport { types as RepoTypes } from \"../repositories\";\n\nconst actionCreator = actionCreatorFactory(\"TBL_EDITOR\");\n\nexport const setEditTBL = actionCreator<{ tbl: RepoTypes.TBL }>(\"SET_EDIT_TBL\");\n\nexport const updateEditData = actionCreator<{\n  data: string;\n}>(\"UPDATE_EDIT_DATA\");\n\nexport default {\n  setEditTBL,\n  updateEditData\n};\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport produce from \"immer\";\nimport { EditorState as State } from \"./types\";\nimport actions from \"./actions\";\n\nexport const initSelectedTBL = { id: \"\", name: \"\", data: \"\", created: -1 };\nexport const initEditData = \"\";\n\nconst initialState: State = {\n  selectedTBL: initSelectedTBL,\n  editData: initEditData\n};\n\n/* eslint-disable no-param-reassign */\nconst reducer = reducerWithInitialState<State>(initialState)\n  .case(actions.setEditTBL, (state, payload) =>\n    produce(state, draft => {\n      draft.selectedTBL = payload.tbl;\n    })\n  )\n  .case(actions.updateEditData, (state, payload) =>\n    produce(state, draft => {\n      draft.editData = payload.data;\n    })\n  )\n  .build();\n\nexport default reducer;\n","import { Dispatch } from \"redux\";\nimport actions from \"./actions\";\nimport { initEditData, initSelectedTBL } from \"./reducers\";\nimport { types as RepoTypes } from \"../repositories\";\n\nconst setEditTBL = (dispatch: Dispatch) => (tbl: RepoTypes.TBL): void => {\n  dispatch(actions.setEditTBL({ tbl }));\n  dispatch(actions.updateEditData({ data: tbl.data }));\n};\n\nconst clearEditTBL = (dispatch: Dispatch) => (): void => {\n  dispatch(actions.setEditTBL({ tbl: initSelectedTBL }));\n  dispatch(actions.updateEditData({ data: initEditData }));\n};\n\nconst updateEditData = (dispatch: Dispatch) => (data: string): void => {\n  dispatch(actions.updateEditData({ data }));\n};\n\nexport default {\n  setEditTBL,\n  clearEditTBL,\n  updateEditData\n};\n","import { EditorState } from \"./types\";\n\nconst isCurrentDataChanged = (editors: EditorState): boolean => {\n  const { selectedTBL, editData } = editors;\n\n  if (!selectedTBL.id) return false;\n\n  return editData !== selectedTBL.data;\n};\n\nexport default {\n  isCurrentDataChanged\n};\n","import reducer from \"./reducers\";\n\nexport { default as operations } from \"./operations\";\nexport { default as selectors } from \"./selectors\";\nexport { default as types } from \"./types\";\n\nexport default reducer;\n","import actionCreatorFactory from \"typescript-fsa\";\n\nconst actionCreator = actionCreatorFactory(\"TIME_TABLE\");\n\nexport const selectTimeTable = actionCreator<{\n  dayOfWeek: string;\n}>(\"SELECT_TIME_TABLE\");\n\nexport default {\n  selectTimeTable\n};\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\nimport produce from \"immer\";\nimport actions from \"./actions\";\nimport { TimeTableState as State } from \"./types\";\n\n/* eslint-disable no-param-reassign */\nconst reducer = reducerWithInitialState<State>({ selectDayOfWeek: \"\" })\n  .case(actions.selectTimeTable, (state, payload) =>\n    produce(state, draft => {\n      draft.selectDayOfWeek = payload.dayOfWeek;\n    })\n  )\n  .build();\n\nexport default reducer;\n","import { Dispatch } from \"redux\";\nimport actions from \"./actions\";\n\nconst selectTimeTable = (dispatch: Dispatch) => {\n  return (dayOfWeek: string): void => {\n    dispatch(actions.selectTimeTable({ dayOfWeek }));\n  };\n};\n\nexport default {\n  selectTimeTable\n};\n","import { DescriptionDictionary, TimeTable, TTMinute } from \"./types\";\n\nexport const getTitles = (input: string): string[] => {\n  const datas = input.match(/^#.+/gm);\n  if (!datas) {\n    return [\"Not found title\"];\n  }\n\n  const res: string[] = [];\n\n  datas.forEach((e): void => {\n    const title = e // \"# 新宿 大崎方面(平日)\"\n      .slice(1) // \" 新宿 大崎方面(平日)\"\n      .trim(); // \"新宿 大崎方面(平日)\"\n\n    if (res.find((t): boolean => t === title)) {\n      res.push(`Duplicate:${title}`);\n    } else {\n      res.push(title);\n    }\n  });\n\n  return res;\n};\n\nexport const getDayOfWeeks = (input: string): string[] =>\n  input.match(/^\\[.+\\]$/gm) || [\"[NOT_FOUND]\"];\n\nconst dayOfWeekDict: { [key: string]: string } = {\n  MON: \"月\",\n  TUE: \"火\",\n  WED: \"水\",\n  THU: \"木\",\n  FRI: \"金\",\n  SAT: \"土\",\n  SUN: \"日\",\n  HOL: \"祝\",\n  NOT_FOUND: \"Not found day of week\"\n};\n\nexport const convertDayOfWeek = (dayOfWeekStr: string): string => {\n  const list = dayOfWeekStr // \"[SAT][SUN][HOL]\"\n    .slice(1, -1) // \"SAT][SUN][HOL\"\n    .split(\"][\") // [\"SAT\", \"SUN\", \"HOL\"]\n    .map((e: string): string => dayOfWeekDict[e] || `${e}?`); // [\"土\", \"日\", \"祝\"]\n\n  return `[${list.reduce((sum, str): string => `${sum}] [${str}`)}]`;\n};\n\nexport const getTTMinutes = (input: string): TTMinute[] => {\n  const res: TTMinute[] = [];\n\n  if (input.trim() === \"\") {\n    res.push({\n      minute: \"Undefined\",\n      descriptions: \"\"\n    });\n    return res;\n  }\n\n  input // \" ea10 ea22 da33 da44 ea50 ea57\"\n    .trim() // \"ea10 ea22 da33 da44 ea50 ea57\"\n    .split(\" \") // [\"ea10\", \"ea22\", \"da33\", \"da44\", \"ea50\", \"ea57\"]\n    .forEach((e): void => {\n      // v = \"ea10\"\n      const minuteStr = e.slice(-2); // \"10\"\n      const descsStr = e.slice(0, -2); // \"ea\"\n\n      if (!/^[0-5]\\d$/.test(minuteStr)) {\n        res.push({\n          minute: `Illegal minute:${minuteStr}`,\n          descriptions: descsStr\n        });\n      } else if (res.find((t): boolean => t.minute === minuteStr)) {\n        res.push({\n          minute: `Duplicate:${minuteStr}`,\n          descriptions: descsStr\n        });\n      } else {\n        res.push({\n          minute: minuteStr,\n          descriptions: descsStr\n        });\n      }\n    });\n\n  return res;\n};\n\nexport const getTimeTable = (input: string): TimeTable => {\n  const res: TimeTable = {\n    title: \"タイトル\",\n    dayOfWeek: \"曜日\",\n    hours: []\n  };\n\n  if (!input) {\n    return res;\n  }\n\n  res.title = getTitles(input).reduce((sum, str): string => `${sum}, ${str}`);\n\n  const [dayOfWeek] = getDayOfWeeks(input).map(convertDayOfWeek);\n  res.dayOfWeek = dayOfWeek;\n\n  const datas = input.match(/^\\d{1,2}:($|.+)/gm);\n  if (!datas) {\n    return res;\n  }\n\n  datas.forEach((e): void => {\n    // e = \"7: ea10 ea22 da33 da44 ea50 ea57\"\n    const kv = e.split(\":\"); // [\"7\", \" ea10 ea22 da33 da44 ea50 ea57\"]\n\n    if (res.hours.find((t): boolean => t.hour === kv[0])) {\n      res.hours.push({\n        hour: `Duplicate:${kv[0]}`,\n        minutes: getTTMinutes(kv[1])\n      });\n    } else {\n      res.hours.push({\n        hour: kv[0],\n        minutes: getTTMinutes(kv[1])\n      });\n    }\n  });\n\n  return res;\n};\n\nexport const getDescriptionDict = (\n  descriptionStr: string\n): DescriptionDictionary => {\n  const res: DescriptionDictionary = { \"Illegal Description\": [] };\n\n  descriptionStr\n    .split(/\\r\\n|\\n/)\n    .filter((e): boolean => e.length !== 0)\n    .forEach((e): void => {\n      const kv = e.split(\":\");\n      if (kv.length !== 2) {\n        res[\"Illegal Description\"].push(e);\n        return;\n      }\n\n      const key = kv[0];\n      const values = kv[1]\n        .split(\";\")\n        .map((v): string => v.replace(/^(\\s|\\u3000)|(\\s|\\u3000)$/g, \"_\"));\n\n      if (!key.match(/^[a-zA-Z]$/) || res[key]) {\n        res[\"Illegal Description\"].push(e);\n        return;\n      }\n\n      res[key] = values;\n    });\n\n  if (res[\"Illegal Description\"].length === 0) {\n    delete res[\"Illegal Description\"];\n  }\n\n  return res;\n};\n\nexport const removeComment = (str: string): string =>\n  str.replace(/^(;.*|(\\s|\\u3000)*)[\\r\\n]/gm, \"\");\n\nexport const splitTBL = (\n  tbl: string\n): { descriptionStr: string; timeTableStrList: string[] } => {\n  const [descriptionStr, ...timeTableStrList] = removeComment(tbl)\n    .replace(/^(\\[.+\\])$/gm, \"@SPL@$1\") // 曜日データの先頭に文字列を追加\n    .split(\"@SPL@\"); // 追加した文字列で分割\n\n  return {\n    descriptionStr,\n    timeTableStrList\n  };\n};\n\nexport default {\n  getDayOfWeeks,\n  getDescriptionDict,\n  getTimeTable,\n  splitTBL\n};\n","import reducer from \"./reducers\";\n\nexport { default as operations } from \"./operations\";\nexport { default as selectors } from \"./selectors\";\nexport { default as types } from \"./types\";\n\nexport default reducer;\n","import { Dispatch } from \"redux\";\nimport actions from \"./actions\";\nimport selectors from \"./selectors\";\nimport { TBL } from \"./types\";\nimport { generateId, generateTBLData, generateTimestamp, byId } from \"./utils\";\nimport { operations as editorOperations } from \"../editors\";\nimport { operations as ttOperations } from \"../timetables\";\nimport { State } from \"../../store\";\n\nexport const resize = (dispatch: Dispatch, state: State) => {\n  return (name: string): void => {\n    const tbls = selectors.getTBLs(state.repositories);\n    const filteredByName = selectors.filterByName(tbls, name);\n\n    const deleteSize = filteredByName.length - state.repositories.historySize;\n    if (deleteSize > 0) {\n      selectors\n        .sortByCreated(filteredByName, true)\n        .slice(0, deleteSize)\n        .forEach(tbl => dispatch(actions.remove({ id: tbl.id })));\n    }\n  };\n};\n\nconst create = (dispatch: Dispatch) => {\n  return (name: string): void => {\n    const newTBL: TBL = {\n      id: generateId(),\n      name,\n      data: generateTBLData(name),\n      created: generateTimestamp()\n    };\n\n    dispatch(actions.create({ tbl: newTBL }));\n\n    editorOperations.setEditTBL(dispatch)(newTBL);\n    ttOperations.selectTimeTable(dispatch)(\"\");\n  };\n};\n\nconst read = (dispatch: Dispatch, state: State) => {\n  return (id: string): void => {\n    const tbls = selectors.getTBLs(state.repositories);\n    const tbl = selectors.findById(tbls, id);\n    if (!tbl) return;\n\n    editorOperations.setEditTBL(dispatch)(tbl);\n    ttOperations.selectTimeTable(dispatch)(\"\");\n  };\n};\n\nconst save = (dispatch: Dispatch, state: State) => {\n  return (name: string, data: string): void => {\n    const newTBL: TBL = {\n      id: generateId(),\n      name,\n      data,\n      created: generateTimestamp()\n    };\n\n    dispatch(actions.create({ tbl: newTBL }));\n\n    editorOperations.setEditTBL(dispatch)(newTBL);\n\n    resize(dispatch, state)(name);\n  };\n};\n\nconst rename = (dispatch: Dispatch, state: State) => (oldName: string) => (\n  newName: string,\n  deleteOrigin: boolean\n): void => {\n  if (oldName === newName) return;\n\n  const tbls = selectors.getTBLs(state.repositories);\n  const filteredByName = selectors.filterByName(tbls, oldName);\n  const sortedByCreated = selectors.sortByCreated(filteredByName, true);\n\n  if (sortedByCreated.length === 0) return;\n\n  const initCreated = generateTimestamp();\n  const newTBLs = sortedByCreated.map(\n    (tbl, i): TBL => ({\n      ...tbl,\n      id: generateId(),\n      name: newName,\n      created: deleteOrigin ? tbl.created : initCreated + i\n    })\n  );\n\n  newTBLs.forEach(e => {\n    dispatch(actions.create({ tbl: e }));\n  });\n\n  if (deleteOrigin) {\n    sortedByCreated.forEach(tbl => dispatch(actions.remove({ id: tbl.id })));\n  }\n\n  const index = sortedByCreated.findIndex(byId(state.editors.selectedTBL.id));\n  if (index !== -1) {\n    editorOperations.setEditTBL(dispatch)(newTBLs[index]);\n  }\n};\n\nconst removeById = (dispatch: Dispatch, state: State) => {\n  return (id: string): void => {\n    dispatch(actions.remove({ id }));\n\n    if (state.editors.selectedTBL.id === id) {\n      editorOperations.clearEditTBL(dispatch)();\n      ttOperations.selectTimeTable(dispatch)(\"\");\n    }\n  };\n};\n\nconst removeByName = (dispatch: Dispatch, state: State) => {\n  return (name: string): void => {\n    const tbls = selectors.getTBLs(state.repositories);\n    const deleteTBLs = selectors.filterByName(tbls, name);\n\n    deleteTBLs.forEach(tbl => {\n      const { id } = tbl;\n\n      dispatch(actions.remove({ id }));\n\n      if (state.editors.selectedTBL.id === id) {\n        editorOperations.clearEditTBL(dispatch)();\n        ttOperations.selectTimeTable(dispatch)(\"\");\n      }\n    });\n  };\n};\n\nconst updateSearchFileName = (dispatch: Dispatch) => {\n  return (fileName: string): void => {\n    dispatch(actions.updateSearchFileName({ fileName }));\n  };\n};\n\nconst updateCheckFileName = (dispatch: Dispatch) => {\n  return (fileName: string): void => {\n    dispatch(actions.updateCheckFileName({ fileName }));\n  };\n};\n\nconst setHistorySize = (dispatch: Dispatch) => {\n  return (historySize: number): void => {\n    dispatch(actions.setHistorySize({ historySize }));\n  };\n};\n\nexport default {\n  create,\n  read,\n  save,\n  rename,\n  removeById,\n  removeByName,\n  updateSearchFileName,\n  updateCheckFileName,\n  setHistorySize\n};\n","import reducer from \"./reducers\";\n\nexport { default as operations } from \"./operations\";\nexport { default as selectors } from \"./selectors\";\nexport { default as types } from \"./types\";\n\nexport default reducer;\n","import React, { ReactElement } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { TextField } from \"@material-ui/core\";\nimport { HistorySetting as Setting } from \"../../constants\";\n\nexport type StateProps = {\n  historySize: number;\n};\n\nexport type DispatchProps = {\n  setHistorySize: (size: number) => void;\n};\n\nconst HistorySetting: React.FC<StateProps & DispatchProps> = ({\n  historySize,\n  setHistorySize\n}): ReactElement => {\n  const { min, max } = Setting.historySize;\n  const [inputData, setInputData] = React.useState(historySize);\n\n  const debounceChangeInput = React.useCallback(\n    debounce((e: number): void => {\n      setHistorySize(e);\n    }, 500),\n    []\n  );\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const data = Number(e.target.value);\n    const size = Math.min(Math.max(data, min), max);\n\n    setInputData(size);\n    debounceChangeInput(size);\n  };\n\n  return (\n    <TextField\n      id=\"tbl-history-max-size\"\n      label=\"保存履歴の最大記録数\"\n      helperText={`Size:${Setting.historySize.min}~${Setting.historySize.max}`}\n      margin=\"dense\"\n      variant=\"outlined\"\n      type=\"number\"\n      required\n      fullWidth\n      inputProps={{\n        min,\n        max\n      }}\n      value={inputData}\n      onChange={handleChangeInput}\n    />\n  );\n};\n\nexport default HistorySetting;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations } from \"../../state/ducks/repositories\";\nimport Component, {\n  StateProps,\n  DispatchProps\n} from \"../components/HistorySetting\";\n\nconst mapStateToProps = ({ repositories }: State): StateProps => ({\n  historySize: repositories.historySize\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  setHistorySize: operations.setHistorySize(dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  IconButton\n} from \"@material-ui/core\";\nimport { Settings } from \"@material-ui/icons\";\nimport AppGridStyle from \"../containers/AppGridStyle\";\nimport EditorStyle from \"../containers/EditorStyle\";\nimport ViewerStyle from \"../containers/ViewerStyle\";\nimport HistorySetting from \"../containers/HistorySetting\";\n\nconst SettingMenu: React.FC = (): ReactElement => {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = (): void => {\n    setOpen(true);\n  };\n\n  const handleClose = (): void => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <IconButton onClick={handleClickOpen}>\n        <Settings fontSize=\"small\" />\n      </IconButton>\n      <Dialog\n        maxWidth=\"xs\"\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"app-setting-dialog-title\"\n        aria-describedby=\"app-setting-dialog-description\"\n      >\n        <DialogTitle id=\"app-setting-dialog\">Setting</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"app-setting-dialog-description\">\n            時刻表・入力画面の大きさや、保存履歴の最大記録数を変更できます。\n          </DialogContentText>\n\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"stretch\"\n            spacing={2}\n          >\n            <Grid item xs={12}>\n              <AppGridStyle />\n            </Grid>\n\n            <Grid item xs={12}>\n              <ViewerStyle />\n            </Grid>\n\n            <Grid item xs={12}>\n              <EditorStyle />\n            </Grid>\n\n            <Grid item xs={12}>\n              <HistorySetting />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" color=\"primary\" onClick={handleClose}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default SettingMenu;\n","import React, { ReactElement } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n      minWidth: 150\n    }\n  })\n);\n\nexport type StateProps = {\n  dayOfWeeks: string[];\n  selectDayOfWeek: string;\n};\n\nexport type DispatchProps = {\n  selectTimeTable: (dayOfWeek: string) => void;\n};\n\nconst TimeTableSelector: React.FC<StateProps & DispatchProps> = ({\n  dayOfWeeks,\n  selectDayOfWeek,\n  selectTimeTable\n}): ReactElement => {\n  const classes = useStyles();\n\n  const handleSelectTimeTable = React.useCallback(\n    (e: React.ChangeEvent<{ name?: string; value: unknown }>): void => {\n      selectTimeTable(e.target.value as string);\n    },\n    [selectTimeTable]\n  );\n\n  return (\n    <form autoComplete=\"off\">\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"select-day-of-week\">Select Time Table</InputLabel>\n        <Select\n          value={selectDayOfWeek}\n          onChange={handleSelectTimeTable}\n          inputProps={{\n            name: \"day-of-week\",\n            id: \"select-day-of-week\"\n          }}\n        >\n          {dayOfWeeks.map(\n            (dayOfWeek): ReactElement => (\n              <MenuItem\n                key={dayOfWeek}\n                value={dayOfWeek}\n                selected={dayOfWeek === selectDayOfWeek}\n              >\n                {dayOfWeek}\n              </MenuItem>\n            )\n          )}\n        </Select>\n      </FormControl>\n    </form>\n  );\n};\n\nexport default TimeTableSelector;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations, selectors } from \"../../state/ducks/timetables\";\nimport Component, {\n  StateProps,\n  DispatchProps\n} from \"../components/TimeTableSelector\";\n\nconst mapStateToProps = ({ editors, timetables }: State): StateProps => {\n  const dayOfWeeks = selectors.getDayOfWeeks(editors.editData);\n\n  return {\n    dayOfWeeks,\n    selectDayOfWeek: timetables.selectDayOfWeek\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  selectTimeTable: operations.selectTimeTable(dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport { ButtonProps } from \"@material-ui/core/Button\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: \"relative\"\n    },\n    progress: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      marginTop: -12,\n      marginLeft: -12\n    }\n  })\n);\n\ntype Props = ButtonProps<\"button\", { isChanging: boolean }>;\n\nconst ProgressButton: React.FC<Props> = (props): ReactElement => {\n  const classes = useStyles();\n  const { isChanging, ...btnProps } = props;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.wrapper}>\n        <Button\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...btnProps}\n          // eslint-disable-next-line react/destructuring-assignment\n          disabled={!isChanging ? props.disabled : true}\n        />\n        {isChanging && (\n          <CircularProgress size={24} className={classes.progress} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressButton;\n","import React, { ReactElement } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport debounce from \"lodash/debounce\";\nimport {\n  Button,\n  Fab,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport ProgressButton from \"./ProgressButton\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fab: {\n      margin: theme.spacing(1)\n    }\n  })\n);\n\nexport type StateProps = {\n  isCreateFileNameEmpty: boolean;\n  isAlreadyToUseCreateFile: boolean;\n};\n\nexport type DispatchProps = {\n  updateCheckFileName: (fileName: string) => void;\n  create: (fileName: string) => void;\n};\n\nconst CreateFileButton: React.FC<StateProps & DispatchProps> = ({\n  isCreateFileNameEmpty,\n  isAlreadyToUseCreateFile,\n  updateCheckFileName,\n  create\n}): ReactElement => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [changing, setChanging] = React.useState(false);\n  const [inputData, setInputData] = React.useState(\"\");\n\n  const debounceChangeInput = React.useCallback(\n    debounce((e: string): void => {\n      updateCheckFileName(e);\n      setChanging(false);\n    }, 500),\n    []\n  );\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const data = e.target.value;\n    setInputData(data);\n    setChanging(true);\n    debounceChangeInput(data);\n  };\n\n  const handleOpen = (): void => {\n    setOpen(true);\n  };\n\n  const handleClose = (): void => {\n    updateCheckFileName(\"\");\n    setOpen(false);\n  };\n\n  const handleCreate = (): void => {\n    create(inputData.trim());\n    handleClose();\n  };\n\n  React.useEffect((): void => {\n    if (open) {\n      setInputData(\"\");\n    }\n  }, [open]);\n\n  return (\n    <>\n      <Fab\n        onClick={handleOpen}\n        aria-label=\"add\"\n        color=\"primary\"\n        size=\"small\"\n        className={classes.fab}\n      >\n        <Add />\n      </Fab>\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"dialog-rename\">\n        <DialogTitle id=\"dialog-rename\">ファイルの作成</DialogTitle>\n        <form\n          onSubmit={(e): void => {\n            e.preventDefault();\n            handleCreate();\n          }}\n        >\n          <DialogContent>\n            <DialogContentText>ファイル名を入力してください</DialogContentText>\n            <TextField\n              id=\"fileName\"\n              label=\"ファイル名\"\n              placeholder=\"例:駅名-方面名\"\n              fullWidth\n              autoFocus\n              margin=\"dense\"\n              error={isAlreadyToUseCreateFile}\n              helperText={\n                isAlreadyToUseCreateFile\n                  ? \"ファイル名が既に使用されています\"\n                  : \"\"\n              }\n              value={inputData}\n              onChange={handleChangeInput}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} variant=\"outlined\" color=\"secondary\">\n              Cancel\n            </Button>\n            <ProgressButton\n              isChanging={changing}\n              disabled={isCreateFileNameEmpty || isAlreadyToUseCreateFile}\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Create\n            </ProgressButton>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CreateFileButton;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations, selectors } from \"../../state/ducks/repositories\";\nimport Component, {\n  StateProps,\n  DispatchProps\n} from \"../components/CreateFileButton\";\n\nconst mapStateToProps = ({ repositories }: State): StateProps => ({\n  isCreateFileNameEmpty: selectors.isCreateFileNameEmpty(repositories),\n  isAlreadyToUseCreateFile: selectors.isAlreadyToUseCreateFile(repositories)\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  create: operations.create(dispatch),\n  updateCheckFileName: operations.updateCheckFileName(dispatch)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Component);\n","import React, { ReactChild, ReactElement } from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport SettingMenu from \"./SettingMenu\";\nimport TimeTableSelector from \"../containers/TimeTableSelector\";\nimport CreateFileButton from \"../containers/CreateFileButton\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    content: {\n      flexGrow: 1\n    }\n  })\n);\n\ntype ClassType = ReturnType<typeof useStyles>;\n\nconst createTitle = (classes: ClassType): ReactChild => (\n  <>\n    <Typography className={classes.content} component=\"h2\" variant=\"h6\">\n      TBL Editor\n    </Typography>\n\n    <Typography className={classes.content} component=\"h2\" variant=\"h6\">\n      時刻表リストからファイルを選択してください\n    </Typography>\n  </>\n);\n\nconst createEditContents = (\n  classes: ClassType,\n  editFileName: string\n): ReactChild => (\n  <>\n    <Typography\n      className={classes.content}\n      component=\"h2\"\n      variant=\"h6\"\n      color=\"primary\"\n    >\n      {editFileName}\n      .TBL\n    </Typography>\n\n    <div className={classes.content}>\n      <TimeTableSelector />\n    </div>\n  </>\n);\n\nexport type StateProps = {\n  editFileName: string;\n};\n\nconst AppTitleBar: React.FC<StateProps> = ({ editFileName }): ReactElement => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          {editFileName\n            ? createEditContents(classes, editFileName)\n            : createTitle(classes)}\n\n          <CreateFileButton />\n          <SettingMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default AppTitleBar;\n","import { connect } from \"react-redux\";\nimport { State } from \"../../state/store\";\nimport Component, { StateProps } from \"../components/AppTitleBar\";\n\nconst mapStateToProps = ({ editors }: State): StateProps => ({\n  editFileName: editors.selectedTBL.name\n});\n\nexport default connect(mapStateToProps)(Component);\n","import { State } from \"../../state/store\";\n\n// Avoid warnings: react-redux/mapStateToProps-no-store\nconst getState = (state: State): State => state;\n\nexport default {\n  getState\n};\n","import Encoding from \"encoding-japanese\";\nimport FileSaver from \"file-saver\";\nimport { types } from \"../../state/ducks/timetables\";\n\nexport const convertDescriptions = (\n  input: string,\n  descriptionDict: types.DescriptionDictionary\n): string[][] =>\n  Array.from(input).map(\n    (e): string[] => descriptionDict[e] || [`Not found:${e}`]\n  );\n\nexport const getColorCode = (description: string[]): string | undefined => {\n  const res = description.slice(-1)[0].trim();\n\n  if (res.match(/^#[\\da-fA-F]{6}$/)) {\n    return res;\n  }\n\n  return undefined;\n};\n\nconst formatDigit = (input: number): string => `0${input}`.slice(-2);\n\nexport const convertTimeStamp = (utc: number): string => {\n  const d = new Date(utc);\n\n  const year = d.getFullYear();\n  const month = formatDigit(d.getMonth() + 1);\n  const day = formatDigit(d.getDate());\n  const dayOfWeek = [\"日\", \"月\", \"火\", \"水\", \"木\", \"金\", \"土\"][d.getDay()];\n\n  const hour = formatDigit(d.getHours());\n  const minute = formatDigit(d.getMinutes());\n  const second = formatDigit(d.getSeconds());\n\n  const date = `${year}年${month}月${day}日(${dayOfWeek})`;\n  const time = `${hour}:${minute}:${second}`;\n  return `${date}${time}`;\n};\n\nexport const handleExportTBL = (name: string, data: string): void => {\n  const unicodeArray = Encoding.stringToCode(data);\n  const sjisArray = Encoding.convert(unicodeArray, \"SJIS\", \"UNICODE\");\n  const uint8Array = new Uint8Array(sjisArray);\n  const blob = new Blob([uint8Array], {\n    type: \"text/plain;charset=shift_jis\"\n  });\n  FileSaver.saveAs(blob, `${name}.TBL`);\n};\n","import React, { ReactElement } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { Box, Grid, TextField } from \"@material-ui/core\";\nimport { Save, SaveAlt } from \"@material-ui/icons\";\nimport ProgressButton from \"./ProgressButton\";\nimport { handleExportTBL } from \"./componentUtils\";\n\nexport type StateProps = {\n  editFileName: string;\n  editData: string;\n  disableEdit: boolean;\n  isEditDataChanged: boolean;\n  inputRow: number;\n};\n\nexport type DispatchProps = {\n  save: (fileName: string, data: string) => void;\n  changeInput: (data: string) => void;\n};\n\nconst TextEditor: React.FC<StateProps & DispatchProps> = ({\n  editFileName,\n  editData,\n  disableEdit,\n  isEditDataChanged,\n  inputRow,\n  save,\n  changeInput\n}): ReactElement => {\n  const [changing, setChanging] = React.useState(false);\n  const [inputData, setInputData] = React.useState(editData);\n\n  const debounceChangeInput = React.useCallback(\n    debounce((e: string): void => {\n      changeInput(e);\n      setChanging(false);\n    }, 500),\n    []\n  );\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const data = e.target.value;\n    setInputData(data);\n    setChanging(true);\n    debounceChangeInput(data);\n  };\n\n  React.useEffect((): void => {\n    setInputData(editData);\n  }, [editFileName, editData]);\n\n  return (\n    <Box>\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          id=\"time-table-input\"\n          label=\"時刻表データ\"\n          fullWidth\n          multiline\n          rows={inputRow}\n          margin=\"normal\"\n          variant=\"outlined\"\n          disabled={disableEdit}\n          value={inputData}\n          onChange={handleChangeInput}\n        />\n\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <ProgressButton\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<Save />}\n              disabled={!isEditDataChanged}\n              onClick={(): void => save(editFileName, editData)}\n              isChanging={changing}\n            >\n              Save\n            </ProgressButton>\n          </Grid>\n\n          <Grid item>\n            <ProgressButton\n              variant=\"contained\"\n              color=\"primary\"\n              startIcon={<SaveAlt />}\n              onClick={(): void => handleExportTBL(editFileName, editData)}\n              isChanging={changing}\n            >\n              Export\n            </ProgressButton>\n          </Grid>\n        </Grid>\n      </form>\n    </Box>\n  );\n};\n\nexport default TextEditor;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations, selectors } from \"../../state/ducks/editors\";\nimport { operations as repoOperations } from \"../../state/ducks/repositories\";\nimport utils from \"./containerUtils\";\nimport Component, { StateProps, DispatchProps } from \"../components/TextEditor\";\n\ntype StateToProps = { state: State } & StateProps;\nconst mapStateToProps = (state: State): StateToProps => {\n  const { editors, viewstyles } = state;\n  const { selectedTBL, editData } = editors;\n\n  return {\n    state: utils.getState(state),\n    editFileName: selectedTBL.name,\n    editData,\n    disableEdit: !selectedTBL.id,\n    isEditDataChanged: selectors.isCurrentDataChanged(editors),\n    inputRow: viewstyles.textEditorRow\n  };\n};\n\ntype DispatchToProps = { dispatch: Dispatch };\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchToProps => ({\n  dispatch\n});\n\nconst mergeProps = (\n  stateProps: StateToProps,\n  dispatchProps: DispatchToProps\n): StateProps & DispatchProps => {\n  const { state, ...otherState } = stateProps;\n  const { dispatch } = dispatchProps;\n\n  return {\n    ...otherState,\n    save: repoOperations.save(dispatch, state),\n    changeInput: operations.updateEditData(dispatch)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Paper } from \"@material-ui/core\";\nimport TextEditor from \"../containers/TextEditor\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(1)\n    }\n  })\n);\n\nconst Editor: React.FC = (): ReactElement => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Paper square className={classes.paper}>\n        <TextEditor />\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Editor;\n","import React, { ReactElement } from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography\n} from \"@material-ui/core\";\nimport { types } from \"../../state/ducks/timetables\";\nimport { getColorCode } from \"./componentUtils\";\n\nexport type StateProps = {\n  descriptionDict: types.DescriptionDictionary;\n};\n\nconst TimeTableDescriptions: React.FC<StateProps> = ({\n  descriptionDict\n}): ReactElement => (\n  <Table size=\"small\">\n    <TableHead>\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          Key\n        </TableCell>\n        <TableCell>Data</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      {Object.entries(descriptionDict).map(\n        ([key, descriptions]): ReactElement => (\n          <React.Fragment key={key}>\n            <TableRow>\n              <TableCell>\n                <Typography noWrap variant=\"body2\">\n                  {key}\n                </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography\n                  noWrap\n                  variant=\"body2\"\n                  style={{ color: getColorCode(descriptions) }}\n                >\n                  {`[${descriptions.reduce(\n                    (res, str): string => `${res}] [${str}`\n                  )}]`}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          </React.Fragment>\n        )\n      )}\n    </TableBody>\n  </Table>\n);\n\nexport default TimeTableDescriptions;\n","import { connect } from \"react-redux\";\nimport { State } from \"../../state/store\";\nimport { selectors } from \"../../state/ducks/timetables\";\nimport Component, { StateProps } from \"../components/TimeTableDescriptions\";\n\ntype StateToProps = { descriptionStr: string };\n\nconst mapStateToProps = ({ editors }: State): StateToProps => {\n  const { editData } = editors;\n  const { descriptionStr } = selectors.splitTBL(editData);\n\n  return {\n    descriptionStr\n  };\n};\n\nconst mergeProps = (stateProps: StateToProps): StateProps => {\n  const { descriptionStr } = stateProps;\n\n  return {\n    descriptionDict: selectors.getDescriptionDict(descriptionStr)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n  mergeProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography\n} from \"@material-ui/core\";\nimport { types } from \"../../state/ducks/timetables\";\nimport { convertDescriptions, getColorCode } from \"./componentUtils\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles(() =>\n  createStyles({\n    oddCell: {\n      backgroundColor: \"#ffffff\"\n    },\n    evenCell: {\n      backgroundColor: \"#fafafa\"\n    }\n  })\n);\n\nconst createDescriptionMessage = (\n  ttm: types.TTMinute,\n  descriptionDict: types.DescriptionDictionary\n): ReactElement => (\n  <>\n    {convertDescriptions(ttm.descriptions, descriptionDict).map(\n      (descs): ReactElement => (\n        // eslint-disable-next-line react/jsx-key\n        <span style={{ color: getColorCode(descs) }}>{` ${descs[0]}`}</span>\n      )\n    )}\n  </>\n);\n\nexport type StateProps = {\n  title: string;\n  dayOfWeek: string;\n  hours: types.TTHour[];\n  descriptionDict: types.DescriptionDictionary;\n};\n\nconst TimeTableView: React.FC<StateProps> = ({\n  title,\n  dayOfWeek,\n  hours,\n  descriptionDict\n}): ReactElement => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography\n        component=\"h3\"\n        variant=\"subtitle1\"\n        color=\"primary\"\n        align=\"center\"\n      >\n        {title}\n      </Typography>\n\n      <Typography\n        component=\"h3\"\n        variant=\"subtitle1\"\n        color=\"secondary\"\n        align=\"center\"\n      >\n        {dayOfWeek}\n      </Typography>\n\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>時</TableCell>\n            <TableCell>分</TableCell>\n            <TableCell>備考</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {hours.map(\n            (row, index): ReactElement => (\n              <React.Fragment key={row.hour}>\n                {row.minutes.map(\n                  (ttm, idx): ReactElement => (\n                    <TableRow\n                      key={`${row.hour}:${ttm.minute}`}\n                      className={index % 2 ? classes.evenCell : classes.oddCell}\n                    >\n                      {idx === 0 && (\n                        <TableCell\n                          rowSpan={row.minutes.length}\n                          component=\"th\"\n                          scope=\"row\"\n                        >\n                          {row.hour}\n                        </TableCell>\n                      )}\n                      <TableCell>\n                        <Typography noWrap variant=\"body2\">\n                          {ttm.minute}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography noWrap variant=\"body2\">\n                          {createDescriptionMessage(ttm, descriptionDict)}\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )\n                )}\n              </React.Fragment>\n            )\n          )}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nexport default TimeTableView;\n","import { connect } from \"react-redux\";\nimport { State } from \"../../state/store\";\nimport { selectors } from \"../../state/ducks/timetables\";\nimport Component, { StateProps } from \"../components/TimeTableView\";\n\ntype StateToProps = {\n  descriptionStr: string;\n  timeTableStr: string;\n};\n\nconst mapStateToProps = ({ editors, timetables }: State): StateToProps => {\n  const { descriptionStr, timeTableStrList } = selectors.splitTBL(\n    editors.editData\n  );\n\n  if (!timetables.selectDayOfWeek) {\n    return {\n      descriptionStr,\n      timeTableStr: \"\"\n    };\n  }\n\n  const timeTableStr = timeTableStrList.find((e): boolean =>\n    e.includes(timetables.selectDayOfWeek)\n  );\n\n  return {\n    descriptionStr,\n    timeTableStr: timeTableStr || \"\"\n  };\n};\n\nconst mergeProps = (stateProps: StateToProps): StateProps => {\n  const { descriptionStr, timeTableStr } = stateProps;\n\n  const timeTable = selectors.getTimeTable(timeTableStr);\n  const descriptionDict = selectors.getDescriptionDict(descriptionStr);\n\n  return {\n    ...timeTable,\n    descriptionDict\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n  mergeProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from \"@material-ui/core\";\n\nexport type OwnProps = {\n  open: boolean;\n  name: string;\n  onClose: () => void;\n};\n\nexport type DispatchProps = {\n  remove: () => void;\n};\n\nconst DeleteDialog: React.FC<OwnProps & DispatchProps> = ({\n  open,\n  name,\n  onClose,\n  remove\n}): ReactElement => {\n  const handleDelete = (): void => {\n    remove();\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} aria-labelledby=\"dialog-rename\">\n      <DialogTitle id=\"dialog-rename\">ファイルの削除確認</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          「{name}」を削除してもよろしいですか？\n        </DialogContentText>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose} variant=\"outlined\" color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleDelete} variant=\"outlined\" color=\"secondary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default DeleteDialog;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations } from \"../../state/ducks/repositories\";\nimport utils from \"./containerUtils\";\nimport Component, { OwnProps, DispatchProps } from \"../components/DeleteDialog\";\n\ntype StateToProps = { state: State };\nconst mapStateToProps = (state: State): StateToProps => {\n  return {\n    state: utils.getState(state)\n  };\n};\n\ntype DispatchToProps = { dispatch: Dispatch };\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchToProps => ({\n  dispatch\n});\n\nconst mergeProps = (\n  stateProps: StateToProps,\n  dispatchProps: DispatchToProps,\n  ownProps: OwnProps\n): OwnProps & DispatchProps => {\n  const { state } = stateProps;\n  const { dispatch } = dispatchProps;\n  const { name } = ownProps;\n\n  return {\n    ...ownProps,\n    remove: (): void => operations.removeByName(dispatch, state)(name)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from \"@material-ui/core\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles(() =>\n  createStyles({\n    button: {\n      textTransform: \"none\"\n    }\n  })\n);\n\nexport type StateProps = {\n  saveName: string;\n  isEditDataChanged: boolean;\n};\n\nexport type DispatchProps = {\n  save: () => void;\n  read: () => void;\n};\n\nexport type OwnProps = {\n  open: boolean;\n  readId: string;\n  onClose: () => void;\n};\n\nconst ReadDialog: React.FC<StateProps & DispatchProps & OwnProps> = ({\n  open,\n  saveName,\n  isEditDataChanged,\n  onClose,\n  save,\n  read\n}): ReactElement => {\n  const classes = useStyles();\n\n  const handleCancel = (): void => {\n    onClose();\n  };\n\n  const handleDoNotSave = React.useCallback((): void => {\n    read();\n    onClose();\n  }, [onClose, read]);\n\n  const handleSave = (): void => {\n    save();\n    read();\n    onClose();\n  };\n\n  React.useEffect((): void => {\n    if (open && !isEditDataChanged) {\n      handleDoNotSave();\n    }\n  }, [handleDoNotSave, isEditDataChanged, open]);\n\n  return (\n    <Dialog open={open} onClose={handleCancel} aria-labelledby=\"dialog-rename\">\n      <DialogTitle id=\"dialog-rename\">変更内容の保存確認</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          「{saveName}」への変更内容を保存しますか？\n        </DialogContentText>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={handleCancel}\n          variant=\"outlined\"\n          color=\"default\"\n          className={classes.button}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={handleDoNotSave}\n          variant=\"contained\"\n          color=\"secondary\"\n          className={classes.button}\n        >\n          No Save\n        </Button>\n        <Button\n          onClick={handleSave}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ReadDialog;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations } from \"../../state/ducks/repositories\";\nimport { selectors as eSelectors } from \"../../state/ducks/editors\";\nimport utils from \"./containerUtils\";\nimport Component, {\n  StateProps,\n  DispatchProps,\n  OwnProps\n} from \"../components/ReadDialog\";\n\ntype StateToProps = { state: State } & StateProps;\nconst mapStateToProps = (state: State): StateToProps => {\n  const { editors } = state;\n\n  return {\n    state: utils.getState(state),\n    saveName: editors.selectedTBL.name,\n    isEditDataChanged: eSelectors.isCurrentDataChanged(editors)\n  };\n};\n\ntype DispatchToProps = { dispatch: Dispatch };\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchToProps => ({\n  dispatch\n});\n\nconst mergeProps = (\n  stateProps: StateToProps,\n  dispatchProps: DispatchToProps,\n  ownProps: OwnProps\n): StateProps & DispatchProps & OwnProps => {\n  const { state, ...otherState } = stateProps;\n  const { editors } = state;\n  const { dispatch } = dispatchProps;\n  const { readId } = ownProps;\n\n  return {\n    ...otherState,\n    ...ownProps,\n    save: (): void => {\n      operations.save(dispatch, state)(otherState.saveName, editors.editData);\n    },\n    read: (): void => {\n      operations.read(dispatch, state)(readId);\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText\n} from \"@material-ui/core\";\nimport { OpenInNew } from \"@material-ui/icons\";\nimport { types } from \"../../state/ducks/repositories\";\nimport { convertTimeStamp } from \"./componentUtils\";\nimport ReadDialog from \"../containers/ReadDialog\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles(() =>\n  createStyles({\n    list: {\n      overflow: \"auto\"\n    }\n  })\n);\n\nexport type StateProps = {\n  editId: string;\n  tbls: types.TBL[];\n};\n\nexport type OwnProps = {\n  open: boolean;\n  name: string;\n  onClose: () => void;\n};\n\nconst HistoryDialog: React.FC<StateProps & OwnProps> = ({\n  open,\n  name,\n  editId,\n  tbls,\n  onClose\n}): ReactElement => {\n  const classes = useStyles();\n\n  const handleClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"dialog-history\">\n      <DialogTitle id=\"dialog-history\">{name}の編集履歴</DialogTitle>\n\n      <List dense className={classes.list}>\n        {tbls.map(tbl => {\n          return (\n            <TBL\n              key={tbl.id}\n              tbl={tbl}\n              selected={tbl.id === editId}\n              onClose={handleClose}\n            />\n          );\n        })}\n      </List>\n\n      <DialogActions>\n        <Button onClick={handleClose} variant=\"outlined\" color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst TBL: React.FC<{\n  tbl: types.TBL;\n  selected: boolean;\n  onClose: () => void;\n}> = ({ tbl, selected, onClose }) => {\n  const handleClose = (): void => {\n    onClose();\n  };\n\n  // Read Dialog\n  const [openReadDialog, setOpenReadDialog] = React.useState(false);\n\n  const handleOpenReadDialog = (): void => {\n    setOpenReadDialog(true);\n  };\n\n  const handleCloseReadDialog = (): void => {\n    setOpenReadDialog(false);\n    handleClose();\n  };\n\n  return (\n    <>\n      <ListItem selected={selected} button onClick={handleOpenReadDialog}>\n        <ListItemIcon>\n          <OpenInNew />\n        </ListItemIcon>\n        <ListItemText\n          primary={tbl.name}\n          secondary={convertTimeStamp(tbl.created)}\n        />\n      </ListItem>\n\n      <ReadDialog\n        open={openReadDialog}\n        readId={tbl.id}\n        onClose={handleCloseReadDialog}\n      />\n    </>\n  );\n};\n\nexport default HistoryDialog;\n","import { connect } from \"react-redux\";\nimport { State } from \"../../state/store\";\nimport { selectors, types } from \"../../state/ducks/repositories\";\nimport Component, { StateProps, OwnProps } from \"../components/HistoryDialog\";\n\ntype StateToProps = { editId: string; tbls: types.TBL[] };\nconst mapStateToProps = ({ editors, repositories }: State): StateToProps => {\n  return {\n    editId: editors.selectedTBL.id,\n    tbls: selectors.getTBLs(repositories)\n  };\n};\n\ntype DispatchToProps = void;\n\nconst mergeProps = (\n  stateProps: StateToProps,\n  _: DispatchToProps,\n  ownProps: OwnProps\n): StateProps & OwnProps => {\n  const { editId, tbls } = stateProps;\n  const { name } = ownProps;\n\n  const filteredByName = selectors.filterByName(tbls, name);\n  const sortedInDescCreated = selectors.sortByCreated(filteredByName, false);\n\n  return {\n    ...ownProps,\n    editId,\n    tbls: sortedInDescCreated\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n  mergeProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControlLabel,\n  TextField\n} from \"@material-ui/core\";\nimport ProgressButton from \"./ProgressButton\";\n\nexport type OwnProps = {\n  open: boolean;\n  name: string;\n  onClose: () => void;\n};\n\nexport type StateProps = {\n  isCreateFileNameEmpty: boolean;\n  isAlreadyToUseCreateFile: boolean;\n};\n\nexport type DispatchProps = {\n  updateCheckFileName: (fileName: string) => void;\n  rename: (newName: string, deleteOrigin: boolean) => void;\n};\n\nconst RenameDialog: React.FC<StateProps & DispatchProps & OwnProps> = ({\n  open,\n  name,\n  onClose,\n  isCreateFileNameEmpty,\n  isAlreadyToUseCreateFile,\n  updateCheckFileName,\n  rename\n}): ReactElement => {\n  const [changing, setChanging] = React.useState(false);\n  const [inputData, setInputData] = React.useState(name);\n  const [leaveOriginalFile, setLeaveOriginalFile] = React.useState(false);\n\n  const debounceChangeInput = React.useCallback(\n    debounce((e: string): void => {\n      updateCheckFileName(e);\n      setChanging(false);\n    }, 500),\n    []\n  );\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const data = e.target.value;\n    setInputData(data);\n    setChanging(true);\n    debounceChangeInput(data);\n  };\n\n  const handleToggleCheckbox = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void => {\n    setLeaveOriginalFile(event.target.checked);\n  };\n\n  const handleClose = (): void => {\n    updateCheckFileName(\"\");\n    onClose();\n  };\n\n  const handleOK = (): void => {\n    rename(inputData.trim(), !leaveOriginalFile);\n    onClose();\n  };\n\n  React.useEffect((): void => {\n    if (open) {\n      setInputData(name);\n    }\n  }, [name, open]);\n\n  return (\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"dialog-rename\">\n      <DialogTitle id=\"dialog-rename\">ファイル名の変更</DialogTitle>\n      <form\n        onSubmit={(e): void => {\n          e.preventDefault();\n          handleOK();\n        }}\n      >\n        <DialogContent>\n          <DialogContentText>\n            新しいファイル名を入力してください\n          </DialogContentText>\n          <TextField\n            id=\"fileName\"\n            label=\"ファイル名\"\n            placeholder=\"駅名-方面名\"\n            fullWidth\n            autoFocus\n            margin=\"dense\"\n            error={isAlreadyToUseCreateFile}\n            helperText={\n              isAlreadyToUseCreateFile ? \"ファイル名が既に使用されています\" : \"\"\n            }\n            value={inputData}\n            onChange={handleChangeInput}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={leaveOriginalFile}\n                onChange={handleToggleCheckbox}\n                value=\"leaveOriginalFile\"\n                inputProps={{\n                  \"aria-label\": \"leave original file\"\n                }}\n              />\n            }\n            label=\"元のファイルを残す\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\" color=\"secondary\">\n            Cancel\n          </Button>\n          <ProgressButton\n            isChanging={changing}\n            disabled={isCreateFileNameEmpty || isAlreadyToUseCreateFile}\n            type=\"submit\"\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Rename\n          </ProgressButton>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n\nexport default RenameDialog;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { State } from \"../../state/store\";\nimport { operations, selectors } from \"../../state/ducks/repositories\";\nimport utils from \"./containerUtils\";\nimport Component, {\n  StateProps,\n  DispatchProps,\n  OwnProps\n} from \"../components/RenameDialog\";\n\ntype StateToProps = { state: State } & StateProps;\nconst mapStateToProps = (state: State): StateToProps => {\n  const { repositories } = state;\n\n  return {\n    state: utils.getState(state),\n    isCreateFileNameEmpty: selectors.isCreateFileNameEmpty(repositories),\n    isAlreadyToUseCreateFile: selectors.isAlreadyToUseCreateFile(repositories)\n  };\n};\n\ntype DispatchToProps = { dispatch: Dispatch };\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchToProps => ({\n  dispatch\n});\n\nconst mergeProps = (\n  stateProps: StateToProps,\n  dispatchProps: DispatchToProps,\n  ownProps: OwnProps\n): StateProps & DispatchProps & OwnProps => {\n  const { state, ...otherState } = stateProps;\n  const { dispatch } = dispatchProps;\n  const { name } = ownProps;\n\n  return {\n    ...otherState,\n    ...ownProps,\n    updateCheckFileName: operations.updateCheckFileName(dispatch),\n    rename: operations.rename(dispatch, state)(name)\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport debounce from \"lodash/debounce\";\nimport { CircularProgress, Grid, TextField } from \"@material-ui/core\";\n\nexport type DispatchProps = {\n  searchFile: (fileName: string) => void;\n};\n\nconst TimeTableSearch: React.FC<DispatchProps> = ({\n  searchFile\n}): ReactElement => {\n  const [changing, setChanging] = React.useState(false);\n  const [inputData, setInputData] = React.useState(\"\");\n\n  const debounceChangeInput = React.useCallback(\n    debounce((e: string): void => {\n      searchFile(e);\n      setChanging(false);\n    }, 500),\n    []\n  );\n\n  const handleChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const data = e.target.value;\n    setInputData(data);\n    setChanging(true);\n    debounceChangeInput(data);\n  };\n\n  return (\n    <Grid\n      spacing={1}\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"center\"\n    >\n      <Grid item>\n        <TextField\n          label=\"ファイル検索\"\n          margin=\"dense\"\n          value={inputData}\n          onChange={handleChangeInput}\n        />\n      </Grid>\n      {changing && (\n        <Grid item>\n          <CircularProgress />\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default TimeTableSearch;\n","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { operations } from \"../../state/ducks/repositories\";\nimport Component, { DispatchProps } from \"../components/TimeTableSearch\";\n\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps => ({\n  searchFile: operations.updateSearchFileName(dispatch)\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Component);\n","import React, { ReactElement } from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Menu,\n  MenuItem\n} from \"@material-ui/core\";\nimport { Delete, Edit, History, MoreVert, OpenInNew } from \"@material-ui/icons\";\nimport { types } from \"../../state/ducks/repositories\";\nimport { convertTimeStamp } from \"./componentUtils\";\nimport DeleteDialog from \"../containers/DeleteDialog\";\nimport HistoryDialog from \"../containers/HistoryDialog\";\nimport RenameDialog from \"../containers/RenameDialog\";\nimport ReadDialog from \"../containers/ReadDialog\";\nimport TimeTableSearch from \"../containers/TimeTableSearch\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    search: {\n      marginLeft: theme.spacing(1)\n    },\n    list: {\n      overflow: \"auto\"\n    }\n  })\n);\n\nexport type StateProps = {\n  editId: string;\n  tbls: types.TBL[];\n};\n\nconst Repositories: React.FC<StateProps> = ({ editId, tbls }): ReactElement => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.search}>\n        <TimeTableSearch />\n      </div>\n\n      <List dense className={classes.list}>\n        {tbls.map(\n          (tbl): ReactElement => (\n            <TBL key={tbl.id} tbl={tbl} selected={tbl.id === editId} />\n          )\n        )}\n      </List>\n    </>\n  );\n};\n\nconst TBL: React.FC<{\n  tbl: types.TBL;\n  selected: boolean;\n}> = ({ tbl, selected }): ReactElement => {\n  // Edit Menu\n  const [\n    editMenuAnchorEl,\n    setEditMenuAnchorEl\n  ] = React.useState<null | HTMLElement>(null);\n\n  const handleClickEditMenu = (event: React.MouseEvent<HTMLElement>): void => {\n    setEditMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseEditMenu = (): void => {\n    setEditMenuAnchorEl(null);\n  };\n\n  const initDialog = {\n    read: false,\n    history: false,\n    rename: false,\n    delete: false\n  };\n\n  const [openDialog, setOpenDialog] = React.useState(initDialog);\n\n  const handleCloseDialog = (): void => {\n    setOpenDialog(initDialog);\n  };\n\n  const handleOpenReadDialog = (): void => {\n    setOpenDialog({ ...openDialog, read: true });\n  };\n\n  const handleOpenHistoryDialog = (): void => {\n    setOpenDialog({ ...openDialog, history: true });\n  };\n\n  const handleOpenRenameDialog = (): void => {\n    setOpenDialog({ ...openDialog, rename: true });\n  };\n\n  const handleOpenDeleteDialog = (): void => {\n    setOpenDialog({ ...openDialog, delete: true });\n  };\n\n  return (\n    <ListItem selected={selected}>\n      <ListItemIcon>\n        <IconButton onClick={handleOpenReadDialog}>\n          <OpenInNew />\n        </IconButton>\n      </ListItemIcon>\n      <ReadDialog\n        open={openDialog.read}\n        readId={tbl.id}\n        onClose={handleCloseDialog}\n      />\n\n      <ListItemText\n        primary={tbl.name}\n        secondary={convertTimeStamp(tbl.created)}\n      />\n\n      <ListItemSecondaryAction>\n        <IconButton\n          aria-label={`more-${tbl.id}`}\n          aria-controls={`menu-${tbl.id}`}\n          aria-haspopup=\"true\"\n          onClick={handleClickEditMenu}\n        >\n          <MoreVert />\n        </IconButton>\n\n        <Menu\n          id={`menu-${tbl.id}`}\n          anchorEl={editMenuAnchorEl}\n          keepMounted\n          open={Boolean(editMenuAnchorEl)}\n          onClose={handleCloseEditMenu}\n        >\n          <MenuItem\n            key={`history-${tbl.id}`}\n            onClick={(): void => {\n              handleCloseEditMenu();\n              handleOpenHistoryDialog();\n            }}\n          >\n            <ListItemIcon>\n              <History />\n            </ListItemIcon>\n            <ListItemText>History</ListItemText>\n          </MenuItem>\n          <HistoryDialog\n            open={openDialog.history}\n            name={tbl.name}\n            onClose={handleCloseDialog}\n          />\n\n          <MenuItem\n            key={`rename-${tbl.id}`}\n            onClick={(): void => {\n              handleCloseEditMenu();\n              handleOpenRenameDialog();\n            }}\n          >\n            <ListItemIcon>\n              <Edit />\n            </ListItemIcon>\n            <ListItemText>Rename</ListItemText>\n          </MenuItem>\n          <RenameDialog\n            open={openDialog.rename}\n            name={tbl.name}\n            onClose={handleCloseDialog}\n          />\n\n          <MenuItem\n            key={`delete-${tbl.id}`}\n            onClick={(): void => {\n              handleCloseEditMenu();\n              handleOpenDeleteDialog();\n            }}\n          >\n            <ListItemIcon>\n              <Delete />\n            </ListItemIcon>\n            <ListItemText>Delete</ListItemText>\n          </MenuItem>\n          <DeleteDialog\n            open={openDialog.delete}\n            name={tbl.name}\n            onClose={handleCloseDialog}\n          />\n        </Menu>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default Repositories;\n","import { connect } from \"react-redux\";\nimport { State } from \"../../state/store\";\nimport { selectors, types as RepoTypes } from \"../../state/ducks/repositories\";\nimport Component, { StateProps } from \"../components/Repositories\";\n\ntype StateToProps = {\n  editId: string;\n  tbls: RepoTypes.TBL[];\n  searchName: string;\n};\n\nconst mapStateToProps = (state: State): StateToProps => {\n  const { editors, repositories } = state;\n\n  return {\n    editId: editors.selectedTBL.id,\n    tbls: selectors.getTBLs(repositories),\n    searchName: repositories.searchFileName\n  };\n};\n\nconst mergeProps = (stateProps: StateToProps): StateProps => {\n  const { editId, tbls, searchName } = stateProps;\n\n  const sortedInDescCreated = selectors.sortByCreated(tbls, false);\n  const removedDuplicateName = selectors.removeDuplicateName(\n    sortedInDescCreated\n  );\n  const filteredBySearchName = searchName\n    ? selectors.filterByIncludeName(removedDuplicateName, searchName)\n    : removedDuplicateName;\n\n  return {\n    editId,\n    tbls: filteredBySearchName\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  null,\n  mergeProps\n)(Component);\n","import React, { ReactChild, ReactElement } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Box, Paper, Tabs, Tab } from \"@material-ui/core\";\nimport TimeTableDescriptions from \"../containers/TimeTableDescriptions\";\nimport TimeTableView from \"../containers/TimeTableView\";\nimport Repositories from \"../containers/Repositories\";\n\ntype StyleProps = {\n  height: number;\n};\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nconst useStyles = makeStyles<Theme, StyleProps>(theme =>\n  createStyles({\n    tabContent: {\n      maxHeight: props => props.height,\n      overflow: \"auto\",\n      padding: theme.spacing(1)\n    }\n  })\n);\n/* eslint-enable @typescript-eslint/explicit-function-return-type */\n\nconst createTabLabel = (index: number, label: string): ReactChild => (\n  <Tab label={label} id={`tab-${index}`} aria-controls={`tabpanel-${index}`} />\n);\n\nconst createTabContent = (\n  index: number,\n  value: number,\n  children: React.ReactChild\n): ReactChild => (\n  <Box\n    component=\"div\"\n    role=\"tabpanel\"\n    hidden={value !== index}\n    id={`tab-${index}`}\n    aria-labelledby={`tabpanel-${index}`}\n  >\n    {children}\n  </Box>\n);\n\nexport type StateProps = {\n  viewerHeight: number;\n};\n\nconst Viewer: React.FC<StateProps> = ({ viewerHeight }): ReactElement => {\n  const classes = useStyles({ height: viewerHeight });\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (\n    event: React.ChangeEvent<{}>,\n    newValue: number\n  ): void => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"time table\"\n        >\n          {createTabLabel(0, \"時刻表リスト\")}\n          {createTabLabel(1, \"時刻表\")}\n          {createTabLabel(2, \"備考データ\")}\n        </Tabs>\n      </AppBar>\n      <Paper square className={classes.tabContent}>\n        {createTabContent(0, value, <Repositories />)}\n        {createTabContent(1, value, <TimeTableView />)}\n        {createTabContent(2, value, <TimeTableDescriptions />)}\n      </Paper>\n    </>\n  );\n};\n\nexport default Viewer;\n","import { connect } from \"react-redux\";\nimport { State } from \"../../state/store\";\nimport Component, { StateProps } from \"../components/Viewer\";\n\nconst mapStateToProps = ({ viewstyles }: State): StateProps => ({\n  viewerHeight: viewstyles.viewerHeight\n});\n\nexport default connect(mapStateToProps)(Component);\n","import React, { ReactElement } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { types } from \"../../state/ducks/viewstyles\";\nimport AppTitleBar from \"../containers/AppTitleBar\";\nimport Editor from \"./Editor\";\nimport Viewer from \"../containers/Viewer\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(3)\n    }\n  })\n);\n\nexport type StateProps = {\n  gridL: types.GridSize;\n  gridR: types.GridSize;\n};\n\nconst App: React.FC<StateProps> = ({ gridL, gridR }): ReactElement => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={12}>\n          <AppTitleBar />\n        </Grid>\n\n        <Grid item xs={12} md={gridL}>\n          <Viewer />\n        </Grid>\n\n        <Grid item xs={12} md={gridR}>\n          <Editor />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default App;\n","import { connect } from \"react-redux\";\nimport { State } from \"../../state/store\";\nimport { selectors } from \"../../state/ducks/viewstyles\";\nimport Component, { StateProps } from \"../components/App\";\n\nconst mapStateToProps = ({ viewstyles }: State): StateProps =>\n  selectors.getGridSize(viewstyles);\n\nexport default connect(mapStateToProps)(Component);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration): void => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = (): void => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = (): void => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // eslint-disable-next-line no-console\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // eslint-disable-next-line no-console\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error): void => {\n      // eslint-disable-next-line no-console\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response): void => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration): void => {\n          registration.unregister().then((): void => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch((): void => {\n      // eslint-disable-next-line no-console\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", (): void => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then((): void => {\n          // eslint-disable-next-line no-console\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister(): void {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration): void => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { editors, repositories, timetables, viewstyles } from \"./ducks\";\n\nconst rootPersistConfig = {\n  key: \"root\",\n  version: 0,\n  storage,\n  blacklist: [\"editors\", \"repositories\", \"timetables\", \"viewstyles\"]\n};\n\nconst editorsPersistConfig = {\n  key: \"editors\",\n  version: 0,\n  storage,\n  whitelist: [\"selectedTBL\", \"editData\"]\n};\n\nconst repositoriesPersistConfig = {\n  key: \"repositories\",\n  version: 0,\n  storage,\n  whitelist: [\"tbls\", \"historySize\"]\n};\n\nconst viewStylesPersistConfig = {\n  key: \"viewstyles\",\n  version: 0,\n  storage,\n  whitelist: [\"viewerHeight\", \"textEditorRow\", \"appGridRow\"]\n};\n\nconst rootReducer = combineReducers({\n  editors: persistReducer(editorsPersistConfig, editors),\n  repositories: persistReducer(repositoriesPersistConfig, repositories),\n  timetables,\n  viewstyles: persistReducer(viewStylesPersistConfig, viewstyles)\n});\n\nconst persistedReducer = persistReducer(rootPersistConfig, rootReducer);\n\nexport const reduxStore = createStore(persistedReducer);\nexport const persistor = persistStore(reduxStore);\nexport type State = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./views/containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { persistor, reduxStore } from \"./state/store\";\n\nReactDOM.render(\n  <Provider store={reduxStore}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}